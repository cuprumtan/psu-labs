from gost341118 import Streebog512
from gost341018 import GOST3410Curve, sign, verify


streebog = Streebog512()

# входные данные для теста
curve = GOST3410Curve(
    p=3623986102229003635907788753683874306021320925534678605086546150450856166624002482588482022271496854025090823603058735163734263822371964987228582907372403,
    q=3623986102229003635907788753683874306021320925534678605086546150450856166623969164898305032863068499961404079437936585455865192212970734808812618120619743,
    a=7,
    b=1518655069210828534508950034714043154928747527740206436194018823352809982443793732829756914785974674866041605397883677596626326413990136959047435811826396,
    x=1928356944067022849399309401243137598997786635459507974357075491307766592685835441065557681003184874819658004903212332884252335830250729527632383493573274,
    y=2288728693371972859970012155529478416353562327329506180314497425931102860301572814141997072271708807066593850650334152381857347798885864807605098724013854)


# сообщение
plain_message = 'Test my GOST34.10-18!'
byte_message = []
for i in plain_message:
    byte_message.append(ord(i))
# message = int.from_bytes(streebog.get_hash(plain_message), byteorder='big')
message = int.from_bytes(streebog.get_hash(byte_message), byteorder='big')
print('>> Исходное сообщение: ', message, end='\n\n')

# генерация ключей
d, q_point = curve.generate_keys()
print('>> Закрытый ключ: ', d, end='\n\n')

# использование подписи
my_sign = sign(curve, message, d)
print('>> Подпись: ', my_sign, end='\n\n')

my_verify_0 = verify(curve, message, my_sign, q_point)
print('>> Проверка публичного ключа: ', my_verify_0, end='\n\n')

